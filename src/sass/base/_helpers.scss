//* contains general helper classes

html,
body {
  margin: 0;
  padding: 0;
}

body {
  width: 100%;
  overflow: hidden;
  scroll-behavior: smooth;
}

p {
  width: 100%;
  padding: 0;
  margin: 0.5rem 0;
}

button,
a {
  cursor: pointer;
}

//* wrapper used at the top-level
.App {
  position: absolute;
  top: 0;
  left: 0;

  width: 100vw;
  height: 100vh;
  margin: 0;
  padding: 0;

  overflow-x: hidden;
  overflow-y: auto;
  scroll-behavior: smooth;

  //* keeps .view centered since it's width is capped
  display: flex;
  flex-flow: column nowrap;
  align-items: center;

  color: $theme-on-primary;
  background: $mid-purple;

  @include scrollbar($scrollbar-size, $scrollbar-fg, $scrollbar-bg);
}

//* used in creating the content view containers
//* used once per page (about; projects; etc.)

//* each page uses one .page-view
//* wraps full page but content is rendered in .page-view > .view

//* .page-view's main purpose is to keep the full width of .App so
//* the page's background can be extended
.page-view {
  position: relative;
  top: 0;
  left: 0;
  width: 100%;
  height: max-content;
  margin: 0;

  //! modifying for page icons
  //padding: 5rem 0;
  padding: 0;

  display: flex;
  flex-flow: column nowrap;
  align-items: center;

  background: $theme-primary-bg;
  margin-bottom: 1rem;
}

//* displays marks on both sides of the title if .show-sides
.header-1 {
  margin: 1rem 0;

  &.page-title {
    margin-bottom: 3rem;
    //letter-spacing: 0.25rem;
  }

  &.show-sides {
    $sides: (
      "width": 1rem,
      "height": 0.45rem,
    );

    width: max-content;
    height: auto;
    z-index: 0;
    position: relative;
    top: 0;
    left: 0;
    padding: 0;

    &:before,
    &:after {
      content: "";
      max-width: map-get($sides, "width");
      max-height: map-get($sides, "height");
      width: 100%;
      height: 100%;
      z-index: 1;
      position: absolute;
      top: 50%;

      background: none;
      margin: 0;
      padding: 0;
      border: 1px solid $theme-on-primary;
    }

    &:before {
      left: -(map-get($sides, "width"));
      transform: translate(-65%, 0%);
    }
    &:after {
      right: -(map-get($sides, "width"));
      transform: translate(65%, 0%);
    }
  }
}

.content-1 {
  width: 90%;
}

//?.title {
//?margin: 0;
//?margin-top: 2rem;
//?}

//*
.view {
  position: relative;
  top: 0;
  left: 0;

  max-width: $max-view-width;
  width: 100%;
  height: max-content;

  display: flex;
  flex-flow: column nowrap;
  align-items: center;
  background: none;
  transition: all ease 1.5s;
  //transition: background ease 2s;

  &:nth-of-type(2n) {
    background: green;
  }

  &.centered {
    justify-content: center;
  }

  &.width-xl {
    max-width: $xl-view-width;
  }
}

//* used to keep related content in .view together
//* stays width of parent, but height grows based on content

.view-section,
.container {
  z-index: 1;
  width: 100%;
  //TODO background-clip: ;
  height: max-content;
  margin: 0;
  padding: 0;

  display: flex;
  flex-flow: column nowrap;
  justify-content: center;
  align-items: center;
}

.container {
  &.flex-row {
    flex-flow: row nowrap;
  }
}

.debug {
  border: 2px dashed red;
}

.particle-bg {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  //min-height: 100vh;
  z-index: 0;
  //background: $theme-primary-bg;
  opacity: 1;
}
